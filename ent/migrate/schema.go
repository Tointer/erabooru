// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AttributesColumns holds the columns for the "attributes" table.
	AttributesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"tag", "numeric", "date", "string"}},
	}
	// AttributesTable holds the schema information for the "attributes" table.
	AttributesTable = &schema.Table{
		Name:       "attributes",
		Columns:    AttributesColumns,
		PrimaryKey: []*schema.Column{AttributesColumns[0]},
	}
	// MediaColumns holds the columns for the "media" table.
	MediaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "format", Type: field.TypeString},
		{Name: "width", Type: field.TypeInt16},
		{Name: "height", Type: field.TypeInt16},
		{Name: "duration", Type: field.TypeInt16, Nullable: true},
	}
	// MediaTable holds the schema information for the "media" table.
	MediaTable = &schema.Table{
		Name:       "media",
		Columns:    MediaColumns,
		PrimaryKey: []*schema.Column{MediaColumns[0]},
	}
	// MediaAttributesColumns holds the columns for the "media_attributes" table.
	MediaAttributesColumns = []*schema.Column{
		{Name: "value", Type: field.TypeString, Nullable: true},
		{Name: "media_id", Type: field.TypeString},
		{Name: "attribute_id", Type: field.TypeInt},
	}
	// MediaAttributesTable holds the schema information for the "media_attributes" table.
	MediaAttributesTable = &schema.Table{
		Name:       "media_attributes",
		Columns:    MediaAttributesColumns,
		PrimaryKey: []*schema.Column{MediaAttributesColumns[1], MediaAttributesColumns[2]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "media_attributes_media_media",
				Columns:    []*schema.Column{MediaAttributesColumns[1]},
				RefColumns: []*schema.Column{MediaColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "media_attributes_attributes_attribute",
				Columns:    []*schema.Column{MediaAttributesColumns[2]},
				RefColumns: []*schema.Column{AttributesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AttributesTable,
		MediaTable,
		MediaAttributesTable,
	}
)

func init() {
	MediaAttributesTable.ForeignKeys[0].RefTable = MediaTable
	MediaAttributesTable.ForeignKeys[1].RefTable = AttributesTable
}
