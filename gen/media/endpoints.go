// Code generated by goa v3.21.1, DO NOT EDIT.
//
// media endpoints
//
// Command:
// $ goa gen era/booru/design

package media

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "media" service endpoints.
type Endpoints struct {
	List       goa.Endpoint
	Previews   goa.Endpoint
	Get        goa.Endpoint
	UploadURL  goa.Endpoint
	UpdateTags goa.Endpoint
	Delete     goa.Endpoint
}

// NewEndpoints wraps the methods of the "media" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		List:       NewListEndpoint(s),
		Previews:   NewPreviewsEndpoint(s),
		Get:        NewGetEndpoint(s),
		UploadURL:  NewUploadURLEndpoint(s),
		UpdateTags: NewUpdateTagsEndpoint(s),
		Delete:     NewDeleteEndpoint(s),
	}
}

// Use applies the given middleware to all the "media" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.List = m(e.List)
	e.Previews = m(e.Previews)
	e.Get = m(e.Get)
	e.UploadURL = m(e.UploadURL)
	e.UpdateTags = m(e.UpdateTags)
	e.Delete = m(e.Delete)
}

// NewListEndpoint returns an endpoint function that calls the method "list" of
// service "media".
func NewListEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*ListPayload)
		return s.List(ctx, p)
	}
}

// NewPreviewsEndpoint returns an endpoint function that calls the method
// "previews" of service "media".
func NewPreviewsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*PreviewsPayload)
		return s.Previews(ctx, p)
	}
}

// NewGetEndpoint returns an endpoint function that calls the method "get" of
// service "media".
func NewGetEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*GetPayload)
		return s.Get(ctx, p)
	}
}

// NewUploadURLEndpoint returns an endpoint function that calls the method
// "uploadURL" of service "media".
func NewUploadURLEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UploadURLPayload)
		return s.UploadURL(ctx, p)
	}
}

// NewUpdateTagsEndpoint returns an endpoint function that calls the method
// "updateTags" of service "media".
func NewUpdateTagsEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UpdateTagsPayload)
		return nil, s.UpdateTags(ctx, p)
	}
}

// NewDeleteEndpoint returns an endpoint function that calls the method
// "delete" of service "media".
func NewDeleteEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*DeletePayload)
		return nil, s.Delete(ctx, p)
	}
}
